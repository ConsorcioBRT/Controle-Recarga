generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cbt {
  CbtId    Int      @id @default(autoincrement())
  CbtNme   String   @db.VarChar(50)
  SttId    Int      @default(1)
  UsrIdAlt Int
  DtaAlt   DateTime @default(now()) @db.Timestamp(0)
  MtvDel   String?  @db.VarChar(250)

  @@index([CbtNme], map: "IdxU_EqpFbr")
}

model emp {
  EmpId     Int      @id @default(autoincrement())
  EmpNme    String   @db.VarChar(150)
  EmpRaz    String?  @db.VarChar(150)
  EmpRdz    String?  @db.VarChar(15)
  EmpAtv    String?  @db.VarChar(150)
  EmpCnpj   String?  @db.VarChar(15)
  Enduf     String?  @db.VarChar(2)
  EndCdd    String?  @db.VarChar(50)
  EndLtt    String?  @db.VarChar(20)
  EndLgt    String?  @db.VarChar(20)
  EndCep    String?  @db.VarChar(20)
  EndEmp    String?  @db.VarChar(150)
  EndCpl    String?  @db.VarChar(100)
  EmpLgo    String?  @db.VarChar(150)
  EmpUrl    String?  @db.VarChar(150)
  EmlCtt    String?  @db.VarChar(50)
  EmlFrm    String?  @db.VarChar(50)
  EmlFrmPwd String?  @db.VarChar(50)
  FneCtt    String?  @db.VarChar(20)
  FneWha    String?  @db.VarChar(20)
  RssIns    String?  @db.VarChar(50)
  RssFac    String?  @db.VarChar(50)
  RssTwi    String?  @db.VarChar(50)
  RssYou    String?  @db.VarChar(50)
  TpoPix    String?  @db.Char(1)
  ChvPix    String?  @db.VarChar(150)
  QRPixImg  String?  @db.VarChar(150)
  QRPixCpy  String?  @db.VarChar(150)
  SttId     Int      @default(1)
  UsrIdAlt  Int
  DtaAlt    DateTime @default(now()) @db.Timestamp(0)
  MtvDel    String?  @db.VarChar(250)
}

model emp_und {
  EmpId    Int
  UndId    Int      @id @default(autoincrement())
  UndNme   String   @db.VarChar(150)
  UndRdz   String?  @db.VarChar(15)
  UndReg   String?  @db.VarChar(50)
  GpsLtd   String?  @db.VarChar(50)
  GpsLgt   String?  @db.VarChar(50)
  PstRcg   Int?
  SttId    Int      @default(1)
  UsrIdAlt Int
  DtaAlt   DateTime @default(now()) @db.Timestamp(0)
  MtvDel   String?  @db.VarChar(250)

  @@index([UndId], map: "idx_emp_und")
}

model eqp_fbr {
  EqpFbrId  Int      @id @default(autoincrement())
  EqpFbrNme String   @db.VarChar(50)
  SttId     Int      @default(1)
  UsrIdAlt  Int
  DtaAlt    DateTime @default(now()) @db.Timestamp(0)
  MtvDel    String?  @db.VarChar(250)

  @@index([EqpFbrNme], map: "IdxU_EqpFbr")
}

model eqp_itm {
  FrnId        Int
  EqpTpoId     Int
  EqpFbrId     Int
  EqpMdlId     Int
  EqpItmId     Int      @id @default(autoincrement())
  EqpItmCdg    String   @db.VarChar(20)
  EqpItmPlc    String?  @db.VarChar(20)
  EqpItmAnoMdl String?  @db.VarChar(20)
  CbtId        Int
  EqpItmTmh    String   @db.VarChar(20)
  SttId        Int      @default(1)
  UsrIdAlt     Int
  DtaAlt       DateTime @default(now()) @db.Timestamp(0)
  MtvDel       String?  @db.VarChar(250)

  @@index([CbtId], map: "IdxU_CbtId")
  @@index([EqpItmCdg], map: "IdxU_EqpItmCdg")
  @@index([EqpItmPlc], map: "IdxU_EqpItmPlc")
  @@index([EqpItmTmh], map: "IdxU_EqpItmTmh")
  @@index([SttId, EqpTpoId], map: "idx_eqp_itm_stt_tpo")
}

model eqp_loc {
  EqpTpoId Int
  EqpItmId Int
  UndId    Int
  SttId    Int      @default(1)
  UsrIdAlt Int
  DtaAlt   DateTime @default(now()) @db.Timestamp(0)
  MtvDel   String?  @db.VarChar(250)

  @@id([EqpItmId, UndId])
}

model eqp_mdl {
  EqpTpoId  Int
  EqpFbrId  Int
  EqpMdlId  Int      @id @default(autoincrement())
  EqpMdlNme String   @db.VarChar(50)
  SttId     Int      @default(1)
  UsrIdAlt  Int
  DtaAlt    DateTime @default(now()) @db.Timestamp(0)
  MtvDel    String?  @db.VarChar(250)

  @@index([EqpMdlNme], map: "IdxU_EqpMdl")
}

model eqp_tpo {
  EqpTpoId  Int      @id @default(autoincrement())
  EqpTpoNme String   @db.VarChar(50)
  SttId     Int      @default(1)
  UsrIdAlt  Int
  DtaAlt    DateTime @default(now()) @db.Timestamp(0)
  MtvDel    String?  @db.VarChar(250)

  @@index([EqpTpoNme], map: "IdxU_EqpTpo")
}

model frn {
  FrnId    Int      @id @default(autoincrement())
  FrnNme   String   @db.VarChar(50)
  FrnRdz   String   @db.VarChar(50)
  SttId    Int      @default(1)
  UsrIdAlt Int
  DtaAlt   DateTime @default(now()) @db.Timestamp(0)
  MtvDel   String?  @db.VarChar(250)

  @@index([FrnNme], map: "IdxU_Frn")
}

model rcg {
  RcgId    Int       @id @default(autoincrement())
  RcgIdOrg Int?
  EmpId    Int
  DtaOpe   DateTime  @db.Date
  UndId    Int
  VclId    Int
  CrrId    Int
  CrrCnc   Int
  DtaIni   DateTime  @db.DateTime(0)
  DtaFin   DateTime? @db.DateTime(0)
  SocIni   Int?
  SocFin   Int?
  RcgKwh   Float?    @db.Float
  OdoIni   Float?    @db.Float
  OdoFin   Float?    @db.Float
  SttRcgId Int       @default(5)
  FlhId    Int       @default(0)
  FlhDsc   String?   @db.VarChar(250)
  SttId    Int       @default(1)
  UsrIdAlt Int
  DtaAlt   DateTime  @default(now()) @updatedAt @db.Timestamp(0)
  MtvDel   String?   @db.VarChar(250)

  @@index([SttRcgId, VclId], map: "idx_rcg_stt5_vcl")
  @@index([SttRcgId, VclId, UndId, DtaOpe], map: "idx_rcg_stt_vcl_und_dta")
}

model stt {
  SttId    Int      @id @default(autoincrement())
  SttNme   String   @db.VarChar(50)
  SttIdAtu Int      @default(1)
  UsrIdAlt Int
  DtaAlt   DateTime @default(now()) @db.Timestamp(0)
  MtvDel   String?  @db.VarChar(250)

  @@index([SttNme], map: "IdxU_Stt")
}

model usr {
  EmpId    Int
  UsrTpoId Int
  UsrId    Int      @id @default(autoincrement())
  UsrNme   String   @db.VarChar(150)
  UsrLgn   String?  @unique(map: "IdxU_UsrLgn") @db.VarChar(20)
  UsrCpf   String?  @unique(map: "IdxU_UsrCpf") @db.VarChar(15)
  UsrEml   String   @unique(map: "IdxU_UsrEml") @db.VarChar(150)
  UsrPwd   String   @db.VarChar(250)
  UsrFto   String?  @default("avatar.png") @db.VarChar(250)
  SttId    Int      @default(1)
  UsrIdAlt Int
  DtaAlt   DateTime @default(now()) @db.Timestamp(0)
  MtvDel   String?  @db.VarChar(250)
}

model usr_tpo {
  UsrTpoId  Int      @id @default(autoincrement())
  UsrTpoNme String   @unique(map: "IdxU_UsrTpo") @db.VarChar(50)
  SttId     Int      @default(1)
  UsrIdAlt  Int
  DtaAlt    DateTime @default(now()) @db.Timestamp(0)
  MtvDel    String?  @db.VarChar(250)
}

/// View: vw_onibus
model VwOnibus {
  EqpItmId Int      @id            // ID único para Prisma
  Onibus   String
  Situacao String
  Data_Operacao   DateTime? @db.DateTime  // pode ser nulo se não tiver recarga
  UndId    Int?                      // pode ser nulo se não tiver unidade
  PostoRecarga   String?                   // pode ser nulo
  Bateria   Int?                      // pode ser nulo
  Odometro   Float?                    // pode ser nulo
  Carga_kWh Float?                    // pode ser nulo

  @@map("vw_onibus")
}

/// View: vw_posto_recarga
model VwPostoRecarga {
  UndId       Int @id
  PostoRecarga String
  Latitude    String?
  Longitude   String?
  EqpItmId    Int?
  Carregador  String?

  @@map("vw_posto_recarga")
}

/// View: vw_carregador
model VwCarregador {
  UndId       Int
  EqpItmId    Int
  Carregador  String?

  @@id([UndId, EqpItmId])
  @@map("vw_carregador")
}
